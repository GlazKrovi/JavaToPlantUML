@startuml
!theme reddress-darkgreen

class western.Barman extends western.Personnage {
-nomDuBar : String
+ <<create>> Barman(nom : String)
+ <<create>> Barman(nom : String, nomDuBar : String)
+ {Override} getPseudo() : String
+ {Override} dire(texte : String)
+ {Override} sePresenter()
+  servir(client : Personnage)

}
class western.Boisson {
- <<create>> Boisson(nom : String, genre : Genre)
+ {static}   of(nom : String, genre : Genre) : Boisson
+  getNom() : String
+  getGenre() : Genre
+  getNomAvecArticleIndefini() : String
+  getNomAvecArticlePartitif() : String
+  getNomAvecArticleDefini() : String
+  getNomAvecPreposition(preposition : String) : String

}
class western.Brigand extends western.Personnage implements western.HorsLaLoi {
# {static}  {readonly} LOOK_PAR_DEFAUT : String
-look : String
-recompense : Integer
-estLibre : Boolean
+ <<create>> Brigand(nom : String)
+ <<create>> Brigand(nom : String, boisson : Boisson)
+ <<create>> Brigand(nom : String, boisson : Boisson, look : String)
+ {static}   getBoissonParDefaut() : Boisson
+ {static}   setBoissonParDefaut(boisson : Boisson)
+  getLook() : String
+  getRecompense() : Integer
+  estLibre() : Boolean
+  kidnapper(dame : Dame)
+  getCaptives() : Dame[*]
+  seFaireCapturer(cowBoy : Cowboy)
+  seFaireTirerDessus(cowBoy : Cowboy)
+ {Override} getPseudo() : String
+ {Override} sePresenter()

}
class western.Cowboy extends western.Personnage {
-gains : Integer
+ <<create>> Cowboy(nom : String)
+ <<create>> Cowboy(nom : String, boisson : Boisson)
+ {static}   getBoissonParDefaut() : Boisson
+ {static}   setBoissonParDefaut(boisson : Boisson)
+ {Override} getPseudo() : String
+  liberer(dame : Dame)
+  liberer(captives : Dame[*])
+  capturer(horsLaLoi : HorsLaLoi)
+  tirerSur(brigand : HorsLaLoi)
+ {Override} sePresenter()

}
class western.Dame extends western.Personnage {
-estLibre : Boolean
+ <<create>> Dame(nom : String)
+ <<create>> Dame(nom : String, boisson : Boisson)
+ {static}   getBoissonParDefaut() : Boisson
+ {static}   setBoissonParDefaut(boisson : Boisson)
+ {Override} getPseudo() : String
+  seFaireKidnapper(horsLaLoi : HorsLaLoi)
+  seFaireLiberer(cowBoy : Cowboy)
+  estLibre() : Boolean
+ {Override} sePresenter()
+  getRavisseur() : HorsLaLoi

}
enum western.Genre {
FEMININ
MASCULIN

}
class western.Histoire4 {
+ <<create>> Histoire4()
+ {static}   main(args : String[*])

}
class western.Histoire5 {
+ <<create>> Histoire5()
+ {static}   main(args : String[*])

}
interface western.HorsLaLoi extends western.Nommable {
+ estLibre()
+ getRecompense()
+ kidnapper()
+ seFaireCapturer()
+ seFaireTirerDessus()
+ getLook()
+ getCaptives()

}
class western.Narrateur extends western.Personnage {
+ <<create>> Narrateur()
+ <<create>> Narrateur(nom : String)
+ {Override} dire(texte : String)
+ {Override} boire(boisson : Boisson)
+ {Override} boire()
+ {Override} getPseudo() : String

}
interface western.Nommable {
+ getNom()
+ getPseudo()

}
abstract western.Personnage implements western.Nommable {
-nom : String
+ <<create>> Personnage(nom : String)
+ <<create>> Personnage(nom : String, boisson : Boisson)
+ {static}   getPseudos(personnages : Nommable[*]) : String
+ {static}   getBoissonParDefaut() : Boisson
+  dire(texte : String)
+  sePresenter()
+  boire(boisson : Boisson)
+  boire()
+  getNom() : String
+  getBoisson() : Boisson

}
class western.Ripou extends western.Cowboy implements western.HorsLaLoi {
+ <<create>> Ripou(nom : String)
+ <<create>> Ripou(nom : String, boisson : Boisson)
+ <<create>> Ripou(nom : String, boisson : Boisson, look : String)
+  getLook() : String
+ {Override} estLibre() : Boolean
+ {Override} getRecompense() : Integer
+ {Override} kidnapper(dame : Dame)
+ {Override} getCaptives() : Dame[*]
+ {Override} seFaireCapturer(cowBoy : Cowboy)
+ {Override} seFaireTirerDessus(cowBoy : Cowboy)
+ {Override} getPseudo() : String
+ {Override} sePresenter()
+ {Override} liberer(dame : Dame)

}
class western.Sherif extends western.Cowboy {
+ <<create>> Sherif(nom : String)
+ <<create>> Sherif(nom : String, boisson : Boisson)
+ {Override} getNom() : String
+  getWanted() : HorsLaLoi[*]
+ {Override} sePresenter()
+ {Override} capturer(horsLaLoi : HorsLaLoi)
+  rechercher(horsLaLoi : HorsLaLoi)
+  isWanted(horsLaLoi : HorsLaLoi) : Boolean

}
class western.Substantif {
-nom : String
+ <<create>> Substantif(nom : String, genre : Genre)
+ {static}   isVowel(c : Char) : Boolean
+ {static}   startsWithVowel(s : String) : Boolean
+ {static}   getArticleDefini(genre : Genre) : String
+ {static}   faireElision(article : String) : String
+  getNom() : String
+  getGenre() : Genre
+ {Override} toString() : String
+  getArticleIndefini() : String
+  avecArticleIndefini() : String
+  getArticleDefini() : String
+  avecArticleDefini() : String
+  elision() : Boolean
+  getArticlePartitif() : String
+  avecArticlePartitif() : String
+  avecElision(article : String) : String
+  avecPreposition(preposition : String) : String

}
western.Boisson"1" <--o "1"Barman : -boissonParDefaut
western.Barman"1" <.. "1"western.Personnage : <<Use>>
western.Boisson"1" <--o "1"Boisson : +EAU
western.Substantif"1" <--o "1"Boisson : -substantif
western.Boisson"1" <.. "1"western.Genre : <<Use>>
western.Boisson"1" <--o "1"Brigand : -boissonParDefaut
western.Cowboy"1" <--o "1"Brigand : -gardien
western.Brigand"1" <.. "1"western.Dame : <<Use>>
western.Boisson"1" <--o "1"Cowboy : -boissonParDefaut
western.Cowboy"1" <.. "1"western.Dame : <<Use>>
western.Cowboy"1" <.. "1"western.HorsLaLoi : <<Use>>
western.Boisson"1" <--o "1"Dame : -boissonParDefaut
western.Cowboy"1" <--o "1"Dame : -sauveur
western.HorsLaLoi"1" <--o "1"Dame : -ravisseur
western.Narrateur"1" <.. "1"western.Boisson : <<Use>>
western.Boisson"1" <--o "1"Personnage : -BOISSON_PAR_DEFAUT
western.Brigand"1" <--o "1"Ripou : -brigand
western.Ripou"1" <.. "1"western.Dame : <<Use>>
western.Ripou"1" <.. "1"western.Cowboy : <<Use>>
western.Sherif"1" <.. "1"western.HorsLaLoi : <<Use>>
western.Genre"1" <--o "1"Substantif : -genre

@enduml

