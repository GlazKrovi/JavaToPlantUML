@startuml
!theme reddress-darkgreen

class western.Barman extends western.Personnage {
-nomDuBar : String
+ <<create>> Barman(nom : String)
+ <<create>> Barman(nom : String, nomDuBar : String)
+getPseudo() : String
+dire(texte : String)
+sePresenter()
+servir(client : Personnage)

}
class western.Boisson {
+ {static} of(nom : String, genre : Genre) : Boisson
- <<create>> Boisson(nom : String, genre : Genre)
+getNom() : String
+getGenre() : Genre
+getNomAvecArticleIndefini() : String
+getNomAvecArticlePartitif() : String
+getNomAvecArticleDefini() : String
+getNomAvecPreposition(preposition : String) : String

}
class western.Brigand extends western.Personnage implements western.HorsLaLoi {
# {static}  {readonly} LOOK_PAR_DEFAUT : String
-look : String
-recompense : int
-estLibre : boolean
+ <<create>> Brigand(nom : String)
+ <<create>> Brigand(nom : String, boisson : Boisson)
+ <<create>> Brigand(nom : String, boisson : Boisson, look : String)
+getLook() : String
+getRecompense() : int
+estLibre() : boolean
+kidnapper(dame : Dame)
+getCaptives() : Dame[*]
+seFaireCapturer(cowBoy : Cowboy)
+seFaireTirerDessus(cowBoy : Cowboy)
+getPseudo() : String
+sePresenter()
+ {static} getBoissonParDefaut() : Boisson
+ {static} setBoissonParDefaut(boisson : Boisson)

}
class western.Cowboy extends western.Personnage {
-gains : int
+ <<create>> Cowboy(nom : String)
+ <<create>> Cowboy(nom : String, boisson : Boisson)
+getPseudo() : String
+liberer(dame : Dame)
+liberer(captives : Dame[*])
+capturer(horsLaLoi : HorsLaLoi)
+tirerSur(brigand : HorsLaLoi)
+sePresenter()
+ {static} getBoissonParDefaut() : Boisson
+ {static} setBoissonParDefaut(boisson : Boisson)

}
class western.Dame extends western.Personnage {
-estLibre : boolean
+ <<create>> Dame(nom : String)
+ <<create>> Dame(nom : String, boisson : Boisson)
+getPseudo() : String
+seFaireKidnapper(horsLaLoi : HorsLaLoi)
+seFaireLiberer(cowBoy : Cowboy)
+estLibre() : boolean
+sePresenter()
+ {static} getBoissonParDefaut() : Boisson
+ {static} setBoissonParDefaut(boisson : Boisson)
+getRavisseur() : HorsLaLoi

}
enum western.Genre {
FEMININ
MASCULIN

}
class western.Histoire4 {
+ <<create>> Histoire4()
+ {static} main(args : String[*])

}
class western.Histoire5 {
+ <<create>> Histoire5()
+ {static} main(args : String[*])

}
interface western.HorsLaLoi extends western.Nommable {
+estLibre()
+getRecompense()
+kidnapper()
+seFaireCapturer()
+seFaireTirerDessus()
+getLook()
+getCaptives()

}
class western.Narrateur extends western.Personnage {
+ <<create>> Narrateur()
+ <<create>> Narrateur(nom : String)
+dire(texte : String)
+boire(boisson : Boisson)
+boire()
+getPseudo() : String

}
interface western.Nommable {
+getNom()
+getPseudo()

}
abstract western.Personnage implements western.Nommable {
-nom : String
+ <<create>> Personnage(nom : String)
+ <<create>> Personnage(nom : String, boisson : Boisson)
+dire(texte : String)
+sePresenter()
+boire(boisson : Boisson)
+boire()
+getNom() : String
+getBoisson() : Boisson
+ {static} getPseudos(personnages : Nommable[*]) : String
+ {static} getBoissonParDefaut() : Boisson

}
class western.Ripou extends western.Cowboy implements western.HorsLaLoi {
+ <<create>> Ripou(nom : String)
+ <<create>> Ripou(nom : String, boisson : Boisson)
+ <<create>> Ripou(nom : String, boisson : Boisson, look : String)
+getLook() : String
+estLibre() : boolean
+getRecompense() : int
+kidnapper(dame : Dame)
+getCaptives() : Dame[*]
+seFaireCapturer(cowBoy : Cowboy)
+seFaireTirerDessus(cowBoy : Cowboy)
+getPseudo() : String
+sePresenter()
+liberer(dame : Dame)

}
class western.Sherif extends western.Cowboy {
+ <<create>> Sherif(nom : String)
+ <<create>> Sherif(nom : String, boisson : Boisson)
+getNom() : String
+getWanted() : HorsLaLoi[*]
+sePresenter()
+capturer(horsLaLoi : HorsLaLoi)
+rechercher(horsLaLoi : HorsLaLoi)
+isWanted(horsLaLoi : HorsLaLoi) : boolean

}
class western.Substantif {
-nom : String
+ <<create>> Substantif(nom : String, genre : Genre)
+getNom() : String
+getGenre() : Genre
+toString() : String
+ {static} isVowel(c : char) : boolean
+ {static} startsWithVowel(s : String) : boolean
+getArticleIndefini() : String
+avecArticleIndefini() : String
+ {static} getArticleDefini(genre : Genre) : String
+getArticleDefini() : String
+avecArticleDefini() : String
+ {static} faireElision(article : String) : String
+elision() : boolean
+getArticlePartitif() : String
+avecArticlePartitif() : String
+avecElision(article : String) : String
+avecPreposition(preposition : String) : String

}
western.Boisson <--o Barman : -boissonParDefaut
western.Barman <.. western.Personnage : <<Use>>
western.Substantif <--o Boisson : -substantif
western.Boisson <--o Boisson : +EAU
western.Boisson <.. western.Genre : <<Use>>
western.Cowboy <--o Brigand : -gardien
western.Boisson <--o Brigand : -boissonParDefaut
western.Brigand <.. western.Dame : <<Use>>
western.Boisson <--o Cowboy : -boissonParDefaut
western.Cowboy <.. western.Dame : <<Use>>
western.Cowboy <.. western.HorsLaLoi : <<Use>>
western.Cowboy <--o Dame : -sauveur
western.HorsLaLoi <--o Dame : -ravisseur
western.Boisson <--o Dame : -boissonParDefaut
western.Narrateur <.. western.Boisson : <<Use>>
western.Boisson <--o Personnage : -BOISSON_PAR_DEFAUT
western.Brigand <--o Ripou : -brigand
western.Ripou <.. western.Dame : <<Use>>
western.Ripou <.. western.Cowboy : <<Use>>
western.Sherif <.. western.HorsLaLoi : <<Use>>
western.Genre <--o Substantif : -genre

@enduml

