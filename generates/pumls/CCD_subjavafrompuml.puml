@startuml
!theme reddress-darkgreen

class pumlFromJava.doclets.FirstDoclet {
+ <<create>> FirstDoclet()
+ {Override} init(locale : Locale, reporter : Reporter)
+ {Override} getName() : String
+ {Override} getSupportedOptions() : Option[*]
+ {Override} getSupportedSourceVersion() : SourceVersion
+ {Override} run(environment : DocletEnvironment) : boolean
-  dumpElement(element : Element)

}
class pumlFromJava.doclets.PumlDoclet {
+ <<create>> PumlDoclet()
+ {Override} init(locale : Locale, reporter : Reporter)
+ {Override} getName() : String
+ {Override} getSupportedOptions() : Option[*]
+ {Override} getSupportedSourceVersion() : SourceVersion
+ {Override} run(environment : DocletEnvironment) : boolean
-  generateACD(environment : DocletEnvironment)
-  generateCCD(environment : DocletEnvironment)

}
class pumlFromJava.doclets.options.OutOption {
-NameFile : String
+ <<create>> OutOption()
+ {Override} getArgumentCount() : int
+ {Override} getDescription() : String
+ {Override} getKind() : Kind
+ {Override} getNames() : String[*]
+ {Override} getParameters() : String
+ {Override} process(option : String, arguments : String[*]) : boolean
+  getFileName() : String

}
class pumlFromJava.doclets.options.PathOption {
-path : String
+ <<create>> PathOption()
+ {Override} getArgumentCount() : int
+ {Override} getDescription() : String
+ {Override} getKind() : Kind
+ {Override} getNames() : String[*]
+ {Override} getParameters() : String
+ {Override} process(option : String, arguments : String[*]) : boolean
+  getPath() : String

}
class pumlFromJava.doclets.options.TypeOption {
-type : String
+ <<create>> TypeOption()
+ {Override} getArgumentCount() : int
+ {Override} getDescription() : String
+ {Override} getKind() : Kind
+ {Override} getNames() : String[*]
+ {Override} getParameters() : String
+ {Override} process(option : String, arguments : String[*]) : boolean
+  getType() : String

}
class pumlFromJava.generators.Java2Puml {
+ <<create>> Java2Puml()
+ {static}   main(args : String[*])

}
class pumlFromJava.translators.diagrams.PumlACD implements pumlFromJava.translators.diagrams.PumlDiagram {
+ <<create>> PumlACD()
+  translateToScheme(environment : DocletEnvironment) : String

}
class pumlFromJava.translators.diagrams.PumlBasis implements pumlFromJava.translators.diagrams.PumlDiagram {
+ <<create>> PumlBasis()
+  translateToScheme(environment : DocletEnvironment) : String

}
class pumlFromJava.translators.diagrams.PumlCCD implements pumlFromJava.translators.diagrams.PumlDiagram {
+ <<create>> PumlCCD()
+  translateToScheme(environment : DocletEnvironment) : String

}
interface pumlFromJava.translators.diagrams.PumlDiagram {
+ translateToScheme()

}
interface pumlFromJava.translators.elements.InheritableObject {
+ inheritanceTranslate()

}
interface pumlFromJava.translators.elements.Nameable {
+ getFullName()
+ getSimplifiedName()

}
interface pumlFromJava.translators.elements.ObjectTranslator extends pumlFromJava.translators.elements.PumlRawObject, pumlFromJava.translators.elements.Nameable {
+ contentTranslate()
+ open()
+ close()

}
class pumlFromJava.translators.elements.PumlEnum extends pumlFromJava.translators.elements.PumlObject {
+ <<create>> PumlEnum()
+ {Override} selfTranslate(element : Element) : String
+ {Override} contentTranslate(element : Element) : String

}
class pumlFromJava.translators.elements.PumlInterface extends pumlFromJava.translators.elements.PumlObject implements pumlFromJava.translators.elements.InheritableObject {
+ <<create>> PumlInterface()
+ {Override} selfTranslate(element : Element) : String
+ {Override} inheritanceTranslate(element : Element) : String
+ {Override} contentTranslate(element : Element) : String

}
class pumlFromJava.translators.elements.PumlMethod implements pumlFromJava.translators.elements.PumlRawObject, pumlFromJava.translators.elements.Nameable {
+ <<create>> PumlMethod()
+ {Override} selfTranslate(element : Element) : String
+ {Override} getFullName(element : Element) : String
+ {Override} getSimplifiedName(element : Element) : String
-  getParameters(methodElement : ExecutableElement) : String
-  getReturnType(methodElement : ExecutableElement) : String

}
abstract pumlFromJava.translators.elements.PumlObject implements pumlFromJava.translators.elements.ObjectTranslator {
+ <<create>> PumlObject()
+ {abstract}  {Override} selfTranslate(element : Element) : String
+ {Override} getFullName(element : Element) : String
+ {Override} getSimplifiedName(element : Element) : String
+ {abstract}   contentTranslate(element : Element) : String
+ {Override} open() : String
+ {Override} close() : String

}
interface pumlFromJava.translators.elements.PumlRawObject {
+ selfTranslate()

}
class pumlFromJava.translators.elements.PumlType implements pumlFromJava.translators.elements.PumlRawObject {
+ <<create>> PumlType()
+ {Override} selfTranslate(element : Element) : String

}
class pumlFromJava.translators.elements.pumlClasses.PumlClass extends pumlFromJava.translators.elements.pumlClasses.PumlClasses {
+ <<create>> PumlClass()
+ {Override} relationsTranslate(element : Element) : String
# {readonly}  {Override} AggregationsCompositionsTranslate(element : Element) : String
+ {Override} selfTranslate(element : Element) : String
+ {Override} contentTranslate(element : Element) : String
-  methodsTranslate(element : Element) : String
-  fieldsTranslate(element : Element) : String
-  constructorsTranslate(element : Element) : String
# {readonly}  {Override} usesTranslate(element : Element) : String

}
abstract pumlFromJava.translators.elements.pumlClasses.PumlClasses extends pumlFromJava.translators.elements.PumlObject implements pumlFromJava.translators.elements.InheritableObject, pumlFromJava.translators.elements.pumlRelations.RelationableObject {
+ <<create>> PumlClasses()
+ {abstract}  {Override} selfTranslate(element : Element) : String
+ {Override} inheritanceTranslate(element : Element) : String
+ {abstract}  {Override} contentTranslate(element : Element) : String
+ {abstract}  {Override} relationsTranslate(element : Element) : String
-  getExtends(typeElement : TypeElement) : String
-  getImplements(typeElement : TypeElement) : String
# {abstract}  {readonly}   AggregationsCompositionsTranslate(element : Element) : String
# {abstract}  {readonly}   usesTranslate(element : Element) : String

}
class pumlFromJava.translators.elements.pumlClasses.PumlLiteClass extends pumlFromJava.translators.elements.pumlClasses.PumlClasses {
+ <<create>> PumlLiteClass()
+ {Override} selfTranslate(element : Element) : String
+ {Override} relationsTranslate(element : Element) : String
# {readonly}  {Override} usesTranslate(element : Element) : String
# {readonly}  {Override} AggregationsCompositionsTranslate(element : Element) : String
+ {Override} contentTranslate(element : Element) : String
-  primitiveFieldsTranslate(element : Element) : String
-  countPrimitivesFields(element : Element) : int

}
class pumlFromJava.translators.elements.pumlRelations.PumlArrow {
-arrow : String
+ <<create>> PumlArrow(type : PumlArrowLook)
+  getType() : PumlArrowLook
+  getArrow() : String

}
enum pumlFromJava.translators.elements.pumlRelations.PumlArrowLook {
DOTTED
SOLID
HEADFULL_SOLID
HEADFULL_DOTTED
HEADSOCKET_SOLID
HEADSOCKET_DOTTED
DIAMOND_EMPTY
DIAMOND_FULL

}
interface pumlFromJava.translators.elements.pumlRelations.RelationableObject {
+ relationsTranslate()

}
class pumlFromJava.translators.elements.tools.TranslatorTools {
+ <<create>> TranslatorTools()
+ {static}   reformatName(name : String) : String
+ {static}   cutPackage(name : String) : String
+ {static}   identifyCollection(parameterName : String) : String
+ {static}   isCollection(parameterName : String) : boolean
+ {static}   isNotFromJava(typeMirror : TypeMirror) : boolean
+ {static}   isPrimitiveType(type : TypeMirror) : boolean
+ {static}   obtainPackage(fullName : String) : String

}
class pumlFromJava.translators.marker.Marker {
+ <<create>> Marker()
+  umlStart() : String
+  option_strictUml() : String
+  umlEnd() : String

}
class pumlFromJava.translators.viewers.AnnotationsViewer implements pumlFromJava.translators.elements.PumlRawObject {
+ <<create>> AnnotationsViewer()
+ {Override} selfTranslate(element : Element) : String

}
class pumlFromJava.translators.viewers.ModifiersViewer implements pumlFromJava.translators.elements.PumlRawObject {
+ <<create>> ModifiersViewer()
+ {Override} selfTranslate(element : Element) : String
-  getStatic(modifiers : Modifier[*]) : String
-  getAbstract(modifiers : Modifier[*]) : String
-  getFinal(modifiers : Modifier[*]) : String

}
class pumlFromJava.translators.viewers.VisibilityViewer implements pumlFromJava.translators.elements.PumlRawObject {
+ <<create>> VisibilityViewer()
+ {Override} selfTranslate(element : Element) : String

}
class pumlFromJava.writers.Writer implements pumlFromJava.writers.WriterSpecies {
-filepath : String
+ <<create>> Writer(filepath : String, filename : String)
+ <<create>> Writer(filename : String)
+  open()
+  close()
+  write(text : String)
-  createFile()
-  links()
-  createDirectoriesPath(path : String)

}
interface pumlFromJava.writers.WriterSpecies {
+ open()
+ close()
+ write()

}
pumlFromJava.doclets.options.PathOption"1" <--o "1"PumlDoclet : -oPath
pumlFromJava.doclets.options.OutOption"1" <--o "1"PumlDoclet : -oOut
pumlFromJava.doclets.options.TypeOption"1" <--o "1"PumlDoclet : -oType
pumlFromJava.translators.viewers.VisibilityViewer"1" <--o "1"PumlClass : -visibilityViewer
pumlFromJava.translators.viewers.ModifiersViewer"1" <--o "1"PumlClasses : #modifiersViewer
pumlFromJava.translators.viewers.AnnotationsViewer"1" <--o "1"PumlClasses : #annotationsViewer
pumlFromJava.translators.elements.pumlRelations.PumlArrowLook"1" <--o "1"PumlArrow : -type

@enduml

