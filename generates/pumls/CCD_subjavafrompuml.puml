@startuml
!theme reddress-darkgreen

class pumlFromJava.doclets.FirstDoclet {
+ <<create>> FirstDoclet()
+init(locale : Locale, reporter : Reporter)
+getName() : String
+getSupportedOptions() : Option[*]
+getSupportedSourceVersion() : SourceVersion
+run(environment : DocletEnvironment) : boolean
-dumpElement(element : Element)

}
class pumlFromJava.doclets.PumlDoclet {
+ <<create>> PumlDoclet()
-oPath : PathOption
-oOut : OutOption
-oType : TypeOption
+init(locale : Locale, reporter : Reporter)
+getName() : String
+getSupportedOptions() : Option[*]
+getSupportedSourceVersion() : SourceVersion
+run(environment : DocletEnvironment) : boolean
-generateACD(environment : DocletEnvironment)
-generateCCD(environment : DocletEnvironment)

}
class pumlFromJava.doclets.options.OutOption {
-NameFile : String
+ <<create>> OutOption()
+getArgumentCount() : int
+getDescription() : String
+getKind() : Kind
+getNames() : String[*]
+getParameters() : String
+process(option : String, arguments : String[*]) : boolean
+getFileName() : String

}
class pumlFromJava.doclets.options.PathOption {
-path : String
+ <<create>> PathOption()
+getArgumentCount() : int
+getDescription() : String
+getKind() : Kind
+getNames() : String[*]
+getParameters() : String
+process(option : String, arguments : String[*]) : boolean
+getPath() : String

}
class pumlFromJava.doclets.options.TypeOption {
-type : String
+ <<create>> TypeOption()
+getArgumentCount() : int
+getDescription() : String
+getKind() : Kind
+getNames() : String[*]
+getParameters() : String
+process(option : String, arguments : String[*]) : boolean
+getType() : String

}
class pumlFromJava.generators.Java2Puml {
+ <<create>> Java2Puml()
+ {static} main(args : String[*])

}
class pumlFromJava.translators.diagrams.PumlACD implements pumlFromJava.translators.diagrams.PumlDiagram {
+ <<create>> PumlACD()
+translateToScheme(environment : DocletEnvironment) : String

}
class pumlFromJava.translators.diagrams.PumlBasis implements pumlFromJava.translators.diagrams.PumlDiagram {
+ <<create>> PumlBasis()
+translateToScheme(environment : DocletEnvironment) : String

}
class pumlFromJava.translators.diagrams.PumlCCD implements pumlFromJava.translators.diagrams.PumlDiagram {
+ <<create>> PumlCCD()
+translateToScheme(environment : DocletEnvironment) : String

}
interface pumlFromJava.translators.diagrams.PumlDiagram {
+translateToScheme()

}
interface pumlFromJava.translators.ElementTranslator {
+selfTranslate()

}
interface pumlFromJava.translators.Nameable {
+getFullName()
+getSimplifiedName()

}
class pumlFromJava.translators.PumlMethod implements pumlFromJava.translators.ElementTranslator, pumlFromJava.translators.Nameable {
+ <<create>> PumlMethod()
+selfTranslate(element : Element) : String
+getFullName(element : Element) : String
+getSimplifiedName(element : Element) : String
-getParameters(methodElement : ExecutableElement) : String
-getReturnType(methodElement : ExecutableElement) : String

}
class pumlFromJava.translators.PumlType implements pumlFromJava.translators.ElementTranslator {
+ <<create>> PumlType()
+selfTranslate(element : Element) : String

}
class pumlFromJava.translators.TranslatorTools {
+ <<create>> TranslatorTools()
+ {static} reformatName(name : String) : String
+ {static} cutPackage(name : String) : String
+ {static} identifyCollection(parameterName : String) : String
+ {static} isNotFromJava(typeMirror : TypeMirror) : boolean
+ {static} isPrimitiveType(type : TypeMirror) : boolean
+ {static} obtainPackage(fullName : String) : String

}
class pumlFromJava.translators.pumlMarker.Marker {
+ <<create>> Marker()
+umlStart() : String
+option_strictUml() : String
+umlEnd() : String

}
interface pumlFromJava.translators.pumlObjects.InheritableObject {
+inheritanceTranslate()

}
interface pumlFromJava.translators.pumlObjects.ObjectTranslator extends pumlFromJava.translators.ElementTranslator, pumlFromJava.translators.Nameable {
+contentTranslate()
+open()
+close()

}
abstract pumlFromJava.translators.pumlObjects.PumlObject implements pumlFromJava.translators.pumlObjects.ObjectTranslator {
+ <<create>> PumlObject()
+ {abstract} selfTranslate(element : Element) : String
+getFullName(element : Element) : String
+getSimplifiedName(element : Element) : String
+ {abstract} contentTranslate(element : Element) : String
+open() : String
+close() : String

}
interface pumlFromJava.translators.pumlObjects.RelationableObject {
+relationsTranslate()

}
class pumlFromJava.translators.pumlObjects.pumlClasses.PumlClass extends pumlFromJava.translators.pumlObjects.pumlClasses.PumlClasses {
+ <<create>> PumlClass()
-visibilityViewer : VisibilityViewer
+relationsTranslate(element : Element) : String
+selfTranslate(element : Element) : String
+contentTranslate(element : Element) : String
-methodsTranslate(element : Element) : String
-fieldsTranslate(element : Element) : String
-constructorsTranslate(element : Element) : String
-getUses(element : Element) : String

}
abstract pumlFromJava.translators.pumlObjects.pumlClasses.PumlClasses extends pumlFromJava.translators.pumlObjects.PumlObject implements pumlFromJava.translators.pumlObjects.InheritableObject, pumlFromJava.translators.pumlObjects.RelationableObject {
+ <<create>> PumlClasses()
# {readonly} modifiersViewer : ModifiersViewer
+ {abstract} selfTranslate(element : Element) : String
+inheritanceTranslate(element : Element) : String
+ {abstract} contentTranslate(element : Element) : String
+ {abstract} relationsTranslate(element : Element) : String
-getExtends(typeElement : TypeElement) : String
-getImplements(typeElement : TypeElement) : String
# {readonly} getAggregationsCompositions(element : Element) : String

}
class pumlFromJava.translators.pumlObjects.pumlClasses.PumlEnum extends pumlFromJava.translators.pumlObjects.PumlObject {
+ <<create>> PumlEnum()
+selfTranslate(element : Element) : String
+contentTranslate(element : Element) : String

}
class pumlFromJava.translators.pumlObjects.pumlClasses.PumlInterface extends pumlFromJava.translators.pumlObjects.PumlObject implements pumlFromJava.translators.pumlObjects.InheritableObject {
+ <<create>> PumlInterface()
+selfTranslate(element : Element) : String
+inheritanceTranslate(element : Element) : String
+contentTranslate(element : Element) : String

}
class pumlFromJava.translators.pumlObjects.pumlClasses.PumlLiteClass extends pumlFromJava.translators.pumlObjects.pumlClasses.PumlClasses {
+ <<create>> PumlLiteClass()
+selfTranslate(element : Element) : String
+relationsTranslate(element : Element) : String
+contentTranslate(element : Element) : String
-fieldsTranslate(element : Element) : String
-countPrimitivesFields(element : Element) : int

}
class pumlFromJava.translators.pumlViewers.ModifiersViewer implements pumlFromJava.translators.ElementTranslator {
+ <<create>> ModifiersViewer()
+selfTranslate(element : Element) : String
-getStatic(modifiers : Modifier[*]) : String
-getAbstract(modifiers : Modifier[*]) : String
-getFinal(modifiers : Modifier[*]) : String

}
class pumlFromJava.translators.pumlViewers.VisibilityViewer implements pumlFromJava.translators.ElementTranslator {
+ <<create>> VisibilityViewer()
+selfTranslate(element : Element) : String

}
class pumlFromJava.writers.Writer implements pumlFromJava.writers.WriterSpecies {
-filepath : String
-pw : PrintWriter
+ <<create>> Writer(filepath : String, filename : String)
+ <<create>> Writer(filename : String)
+open()
+close()
+write(text : String)
-createFile()
-links()
-createDirectoriesPath(path : String)

}
interface pumlFromJava.writers.WriterSpecies {
+open()
+close()
+write()

}
pumlFromJava.doclets.options.PathOption <-- PumlDoclet : <<Use>>
pumlFromJava.doclets.options.OutOption <-- PumlDoclet : <<Use>>
pumlFromJava.doclets.options.TypeOption <-- PumlDoclet : <<Use>>
pumlFromJava.translators.pumlViewers.VisibilityViewer <-- PumlClass : <<Use>>
pumlFromJava.translators.pumlViewers.ModifiersViewer <-- PumlClasses : <<Use>>

@enduml

