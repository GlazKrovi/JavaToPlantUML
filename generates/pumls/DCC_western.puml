@startuml
!theme reddress-darkgreen
skinparam style strictuml

package western {
class Barman extends western.Personnage {
-clientele
-nomDuBar
-boissonParDefaut
+getPseudo() : String
+dire(texte : String)
+sePresenter()
+servir(client : Personnage)

}
class Boisson {
-substantif
+ {static} EAU
- {static} boissons
+ {static} of(nom : Stringgenre : Genre, ) : Boisson
+getNom() : String
+getGenre() : Genre
+getNomAvecArticleIndefini() : String
+getNomAvecArticlePartitif() : String
+getNomAvecArticleDefini() : String
+getNomAvecPreposition(preposition : String) : String

}
class Brigand extends western.Personnage implements western.HorsLaLoi {
# {static} LOOK_PAR_DEFAUT
-look
-recompense
-estLibre
-captives
-gardien
+getLook() : String
+getRecompense() : int
+estLibre() : boolean
+kidnapper(dame : Dame)
+getCaptives() : Dam[*]
+seFaireCapturer(cowBoy : Cowboy)
+seFaireTirerDessus(cowBoy : Cowboy)
+getPseudo() : String
+sePresenter()
- {static} boissonParDefaut
+ {static} getBoissonParDefaut() : Boisson
+ {static} setBoissonParDefaut(boisson : Boisson)

}
class Cowboy extends western.Personnage {
-gains
-captures
+getPseudo() : String
+liberer(dame : Dame)
+liberer(captives : Dam[*])
+capturer(horsLaLoi : HorsLaLoi)
+tirerSur(brigand : HorsLaLoi)
+sePresenter()
- {static} boissonParDefaut
+ {static} getBoissonParDefaut() : Boisson
+ {static} setBoissonParDefaut(boisson : Boisson)

}
class Dame extends western.Personnage {
-estLibre
-sauveur
-ravisseur
+getPseudo() : String
+seFaireKidnapper(horsLaLoi : HorsLaLoi)
+seFaireLiberer(cowBoy : Cowboy)
+estLibre() : boolean
+sePresenter()
- {static} boissonParDefaut
+ {static} getBoissonParDefaut() : Boisson
+ {static} setBoissonParDefaut(boisson : Boisson)
+getRavisseur() : HorsLaLoi

}
enum Genre <<enumeration>> {
FEMININ
MASCULIN

}
class Histoire4 {
+ {static} main(args : String[])

}
class Histoire5 {
+ {static} main(args : String[])

}
interface HorsLaLoi <<interface>> {
+estLibre()
+getRecompense()
+kidnapper()
+seFaireCapturer()
+seFaireTirerDessus()
+getLook()
+getCaptives()

}
class Narrateur extends western.Personnage {
+dire(texte : String)
+boire(boisson : Boisson)
+boire()
+getPseudo() : String

}
interface Nommable <<interface>> {
+getNom()
+getPseudo()

}
class Personnage implements western.Nommable {
- {static} BOISSON_PAR_DEFAUT
-nom
-boisson
+dire(texte : String)
+sePresenter()
+boire(boisson : Boisson)
+boire()
+getNom() : String
+getBoisson() : Boisson
+ {static} getPseudos(personnages : Nommabl[*]) : String
+ {static} getBoissonParDefaut() : Boisson

}
class Ripou extends western.Cowboy implements western.HorsLaLoi {
-brigand
+getLook() : String
+estLibre() : boolean
+getRecompense() : int
+kidnapper(dame : Dame)
+getCaptives() : Dam[*]
+seFaireCapturer(cowBoy : Cowboy)
+seFaireTirerDessus(cowBoy : Cowboy)
+getPseudo() : String
+sePresenter()
+liberer(dame : Dame)

}
class Sherif extends western.Cowboy {
-wanted
+getNom() : String
+getWanted() : HorsLaLo[*]
+sePresenter()
+capturer(horsLaLoi : HorsLaLoi)
+rechercher(horsLaLoi : HorsLaLoi)
+isWanted(horsLaLoi : HorsLaLoi) : boolean

}
class Substantif {
-nom
-genre
+getNom() : String
+getGenre() : Genre
+toString() : String
+ {static} isVowel(c : char) : boolean
+ {static} startsWithVowel(s : String) : boolean
+getArticleIndefini() : String
+avecArticleIndefini() : String
+ {static} getArticleDefini(genre : Genre) : String
+getArticleDefini() : String
+avecArticleDefini() : String
+ {static} faireElision(article : String) : String
+elision() : boolean
+getArticlePartitif() : String
+avecArticlePartitif() : String
+avecElision(article : String) : String
+avecPreposition(preposition : String) : String

}
western.Boisson -- Barman
western.Substantif -- Boisson
western.Boisson -- Boisson
western.Cowboy -- Brigand
western.Boisson -- Brigand
western.Boisson -- Cowboy
western.Cowboy -- Dame
western.HorsLaLoi -- Dame
western.Boisson -- Dame
western.Boisson -- Personnage
western.Boisson -- Personnage
western.Brigand -- Ripou
western.Genre -- Substantif

@enduml

